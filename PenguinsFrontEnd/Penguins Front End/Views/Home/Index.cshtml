@{
    ViewData["Title"] = "Graphical Data";
}

<h1>@ViewData["Title"]</h1>

<header>
    <script src="https://code.highcharts.com/highcharts.src.js"></script>
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script src="https://code.jquery.com/jquery-3.3.1.min.js"
            integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8="
            crossorigin="anonymous"></script>
</header>
<body>
    <div class="container">
        <h2 id="h2">Index</h2>
        <figure class="highcharts-figure container">
            <div id="container-fluid" class="container-fluid"></div>
            <p id="jsonLiteral"></p>
            <p class="highcharts-description">
                A basic column chart .
            </p>
        </figure>
    </div>
    <script type="text/javascript">

        google.charts.load('visualization', { packages: ['corechart'] });
        google.charts.setOnLoadCallback(drawLineChart);

        function chartData(x, y, title, curve) {

            const type = input =>
                Object.prototype.toString.call(input).replace(/(\[object |\])/ig, '').toLowerCase();

            var data = new google.visualization.DataTable();

            //console.log("X: "+x);
            //console.log("X: "+y);
            debugger;
            data.addColumn(type(x), x);
            data.addColumn(type(y), y);
            x.forEach((xval, index) => {
                console.log('X: '+x);
                console.log('Y: '+y[index]);
                const yval = y[index];
                data.addRows([
                    [xval, yval],
                ]);
            });

            var options = {
                title: title,
                curveType: curve,
                legend: { position: 'bottom', textStyle: { color: '#555', fontSize: 14 } }  // You can position the legend on 'top' or at the 'bottom'.
            };

            var bar_chart = new google.visualization.BarChart(document.getElementById('container-fluid'));
            bar_chart.draw(data, options);      // Draw the chart with Options
        }

        function drawLineChart() {
            $(document).ready(function () {
                var name = [];
                var id = [];
                var login = [];
                var logout = [];


                $.ajax({
                    type: "GET",
                    url: "https://localhost:44391/api/Metrics",
                    //url: "http://penguinsapi.us-east-1.elasticbeanstalk.com/api/Metrics", //Uncomment when redeployed
                    data: "{}",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    async: true,
                    success: function (result) {
                        $.each(result, function (key, item) {
                            document.getElementById("jsonLiteral").innerHTML += "<br>" + item.userName + " has id " + item.userId + " and logged in at " + item.loginTime + " and out at " + item.logoutTime;
                            name.push(item.userName);
                            id.push(item.userId);
                            login.push(item.loginTime);
                            logout.push(item.logoutTime);
                        });

                        chartData(name,id,'User vs UserID','function');
                    },
                    error: function (errormessage) {
                        $('#h2').html(errormessage.responseText);
                        return false;
                    }
                });
            });
        }
    </script>

</body>